@model Food_Management.Data.Models.Category
@{
    ViewData["Title"] = "CategoryGet";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <title>Bootstrap Example</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- jQuery Validation Plugin -->
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/additional-methods.min.js"></script>
    <style>
        .error {
            color: red; /* Kırmızı renk */
            font-size: 12px; /* Daha küçük font boyutu */
        }
    </style>

</head>
<body>

    <h1>CategoryAdd page</h1>
    <br></br>
    @using (Html.BeginForm("CategoryUpdate", "Category", FormMethod.Post))
    {
        @Html.LabelFor(x => x.CategoryID)
        @Html.TextBoxFor(x => x.CategoryID, new { @class = "form-control", @disabled = "disabled" })
        <br></br>
        @Html.LabelFor(x => x.CategoryName)
        @Html.TextBoxFor(x => x.CategoryName, new { @class = "form-control" })
        <br></br>
        @Html.LabelFor(x => x.CategoryDescription)
        @Html.TextBoxFor(x => x.CategoryDescription, new { @class = "form-control" })
        <br></br>
        <button class="btn btn-warning">Update Category</button>
    }
    <script>
        $(document).ready(function () {
            // Formu doğrulama kurallarını belirleyin
            $("form").validate({
                rules: {
                    CategoryName: {
                        required: true,
                        minlength: 4,
                        maxlength: 20
                    },
                    CategoryDescription: {
                        required: false // Opsiyonel, boş bırakılabilir
                    }
                },
                messages: {
                    CategoryName: {
                        required: "Category name is required",
                        minlength: "Category name must be at least 4 characters long",
                        maxlength: "Category name cannot be more than 20 characters long"
                    }
                },
                errorPlacement: function (error, element) {
                    error.insertAfter(element); // Hata mesajını ilgili elemanın altına yerleştir
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass(errorClass); // Hata olan elemanı işaretle
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass(errorClass); // Geçerli olan elemandan işareti kaldır
                }
            });
        });
    </script>
</body>
</html>





